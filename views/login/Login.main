<template>
    <div class="login">
        <p class="title">手机号验证</p>
        <div class="content">
            <text-input placeholder="请输入手机号"
                        type="number"
                        ref="phone"
                        style="border-bottom: 1px solid #dcdfe6; height: 50px; background-color: initial;">
            </text-input>
            <text-input placeholder="请输入6位验证码"
                        type="number"
                        ref="code"
                        style="border-bottom: 1px solid #dcdfe6; height: 50px; background-color: initial;">
            </text-input>
            <m-button @click="login"
                      style="width: 100%; height: 50px; margin-top: 20px; color: white; font-size: 18px; background-color: #66CDAA;"
                      text="设置手机号">
            </m-button>
            <span class="get-code" @click="getCode" m-if="codeFlag">获取验证码</span>
            <span class="wait-data" @click="getCode" m-else>{{waitText}}</span>
        </div>
    </div>
</template>
<script>
    let textInput = input('@/component/common/textinput/textInput.main');
    let mButton = input('@/component/common/mbutton/mButton.main');
    output = {
        components: {
            textInput: textInput,
            mButton: mButton,
        },
        activated: function () {
            setTimeout(() => {
                let show = this.$main.container.get('hideTarBar')
                if(show){
                    show();
                }
                this.scrollInit();
            }, 10);
        },
        data: function () {
            return {
                codeFlag: true,
                waitText: '',
                waitTime: 60,
            }
        },
        mounted: function () {

        },
        methods: {
            login: function () {
                if(!this.verificationPhone()){
                    return false;
                }
                if(!(/^\d{6}$/.test(this.$refs.code.getValue()))){
                    this.$message({
                        message: '验证码错误(必须全数字且长度为6)',
                        cssText: 'background-color: rgba(0, 0, 0, 0.1);color:red;border-radius: 5px;'
                    });
                    return false;
                }
                let phone = this.$refs.phone.getValue();
                let code = this.$refs.code.getValue();
                let load = this.$loading();
                $.get("/mghsc/user/set-phone", {phone: phone, code: code},  (result) => {
                    if(result.code == 200){
                        this.$close(load);
                        alert('手机号设置成功');
                        location.href = "/";
                    }
                }, 'json');
            },
            verificationPhone: function () {
                if(!(/^1[3456789]\d{9}$/.test(this.$refs.phone.getValue()))){
                    this.$message({
                        message: '手机号码有误，请重填',
                        cssText: 'background-color: rgba(0, 0, 0, 0.1);color:red;border-radius: 5px;'
                    });
                    return false;
                }
                return true;
            },
            getCode: function () {
                if(!this.verificationPhone()){
                    return false;
                }
                let phone = this.$refs.phone.getValue();
                let load = this.$loading();
                $.get("/mghsc/send-code", {phone: phone}, (result) => {
                    if(result.code == 200){
                        alert('验证码发送成功，请注意查看');
                        this.codeFlag = false;
                        let time = this.waitTime;
                        this.waitText = `等待发送(${time}s)`
                        this.interval = setInterval( () => {
                            if(--time === 0){
                                clearInterval(this.interval);
                                this.codeFlag = true;
                                return;
                            }
                            this.waitText = `等待发送(${time}s)`
                        }, 1000);
                        this.$close(load);
                    }
                }, 'json');
            }
        }
    }
</script>
<style scoped>
    .login{
        padding: 30px 15px;
    }

    .login .title{
        font-size: 30px;
    }
    .login .content{
        padding-top: 5px;
        position: relative;
    }

    .login .content .get-code, .login .content .wait-data{
        position: absolute;
        right: 10px;
        top: 70px;
        font-size: 14px;
        color: blue;
    }
</style>